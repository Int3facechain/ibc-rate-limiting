syntax = "proto3";
package ratelimit.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Stride-Labs/ibc-rate-limiting/ratelimit/types";

enum PacketDirection {
  option (gogoproto.goproto_enum_prefix) = false;

  PACKET_SEND = 0;
  PACKET_RECV = 1;
}

message Path {
  string denom = 1;
  string channel_id = 2;
}

message Quota {
  string max_percent_send = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string max_percent_recv = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 duration_hours = 3;
}

message Flow {
  string inflow = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string outflow = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string channel_value = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message RateLimit {
  Path path = 1;
  Quota quota = 2;
  Flow flow = 3;
}

message WhitelistedAddressPair {
  string sender = 1;
  string receiver = 2;
}

message HourEpoch {
  uint64 epoch_number = 1;
  google.protobuf.Duration duration = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty"
  ];
  google.protobuf.Timestamp epoch_start_time = 3
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  int64 epoch_start_height = 4;
}